PREFIX=@prefix@
CXX=@CXX@
CPPFLAGS=@CPPFLAGS@
CXXFLAGS=@CXXFLAGS@
CFLAGS=@CFLAGS@
LIBS=@LIBS@

SRC := src
OBJ := obj
ART := art
BIN := bin
SUBDIRS := db dialog entity market widget/market worker
OBJ_DIRS := $(addprefix $(OBJ)/,$(SUBDIRS)) $(OBJ)
EXE := $(BIN)/greenthumb
LIBS := $(LIBS) -lsoci_core -lsoci_sqlite3 -lgreentop -lcurl -ljsoncpp
ARTS := $(wildcard $(ART)/*.png)
OBJS := $(patsubst %.cpp,%.o,$(subst $(SRC),$(OBJ),$(wildcard $(SRC)/*.cpp) $(wildcard $(SRC)/*/*.cpp)))

define make-goal
$1/%.o: $(subst $(OBJ),$(SRC),$1)/%.cpp | $1
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -Wall -fexceptions  -std=c++11 -g -I./include -c $$< -o $$@
	$(CXX) -std=c++11 -MM -MT $$@ -I./include $$< > $$(subst .cpp,.d,$$(subst $$(SRC),$$(OBJ),$$<))
endef

.PHONY: all
all: $(OBJS) $(BIN)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -Wall -fexceptions  -std=c++11 -g -I./include $(OBJS) main.cpp $(LIBS) -o $(EXE)

.PHONY: clean
clean:
	rm -f $(EXE)
	rm -f $(OBJ)/*.o $(OBJ)/*.d
	rm -f $(OBJ)/*/*.o $(OBJ)/*/*.d

.PHONY: install
install: all
	install -d $(DESTDIR)$(PREFIX)/bin
	install $(EXE) $(DESTDIR)$(PREFIX)/bin
	install -d $(DESTDIR)$(PREFIX)/share/greenthumb
	$(foreach var,$(ARTS),install $(var) $(DESTDIR)$(PREFIX)/share/greenthumb/$(notdir $(var));)

$(BIN):
	mkdir $(BIN)

$(OBJ_DIRS):
	mkdir -p $@

-include $(OBJS:.o=.d)

$(foreach dir,$(OBJ_DIRS),$(eval $(call make-goal,$(dir))))
